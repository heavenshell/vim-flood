*flood*	Vim plguin for Flow.

Version: 0.5.1
Author: Shinya Ohynagi <sohyanagi@gmail.com>
Repository: http://github.com/heavenshell/vim-flood/
License: BSD, see LICENSE for more details.

==============================================================================
CONTENTS						*flood-contents*

Introduction		|flood-introduction|
Install			|flood-install|
Tutorial		|flood-tutorial|
Variables		|flood-variables|
Changelogs		|flood-changelog|

==============================================================================
INTRODUCTION						*flood-introduction*

|flood.vim| is a wrapper of Facebook Flow.

This plugin provides the following functions:

+ Queries autocompletion information
  Execute `$ flow autocomplete`

+ Run typechecker(whole project)
  Execute `$ flow`

+ Run typechecker(current buffer)
  Execute `$ flow check-contents`

+ Gets the definition location of a variable or property
  Execute `$ flow get-def`

+ Gets a list of all importers for one or more given modules
  Execute `$ flow get-importers`

+ Get names of all modules imported by one or more given modules
  Execute `$ flow imports`

+ Starts a Flow server
  Execute `$ flow start`

+ Shows current Flow errors by asking the Flow server
  Execute `$ flow status`

+ Stops a Flow server
  Execute `$ flow stop`

+ Shows type annotation suggestions for given files
  Execute `$ flow suggest`

+ Shows the type at a given file and position
  Execute `$ flow type-at-pos`

+ Print version information
  Execute `$ flow version`

Note:
  `flow find-module` is not supported use `FloodDefinition` instead.
  `FloodDefinition` includes `flow find-module`'s function.

==============================================================================
INSTALL							*flood-install*

Install the distributed files into Vim runtime directory which is usually
~/.vim/, or $HOME/vimfiles on Windows.

If you use built in `package`, you should extract the
file into '~/.vim/pack/*/start' directory.

==============================================================================
TUTORIAL						*flood-tutorial*

Configure:

flood.vim execute `flood#init()` on start.

+ Add |omnifunc| setting
+ Add |autocmd| setting when buffer saved
+ Remap definition setting

==============================================================================
VARIABLES					*flood-variables*
g:flood_flow_bin				*g:flood_flow_bin*
		Path to flow-bin.

		Default value is .node_modules/.bin/flow.

g:flood_enable_quickfix				*g:flood_enable_quickfix*
		Enable to open QuickFix window automatically
		(only flow project)

		Default value is 1(Open automatically)

g:flood_complete_async				*g:flood_complete_async*
		Enable asyn complete.
		Currently asyn complete is not supported

		Default value is 0(Sync mode)

g:flood_definition_split			*g:flood_definition_split*
		Use `split`, `vsplit`, `tabedit` when jump to definition.
		`edit = 0`
		`split = 1`
		`vsplit = 2`
		`tabedit = 3`

		Default value is 0(Jump to definition in same buffer).

g:flood_suggest_window				*g:flood_suggest_window*
		Open suggest window with specify position.
		see |windows| help.

		Default value is topleft.

g:flood_enable_init_onstart			*g:flood_enable_init_onstart*
		Execute initialize flood.vim settings.

		Default value is 1(Do initialize).

g:flood_complete_async_popup_on_dot	*g:flood_complete_async_popup_on_dot*
		Show popup window when typing dot.
		This variable only |g:flood_complete_async| is enabled.

		Default value is 0(Not used).

g:flood_set_omnifunc_auto			*g:flood_set_omnifunc_auto*
		If enabed project contains `.flowconfig` execute.
		`setlocla omnifunc=flood#complete` automatically.

		Default value is 1(Enabled).

g:flood_check_on_save				*g:flood_check_on_save*
		Execute FloodCheck on save.

		Default value is 1(Enabled).

g:flood_callbacks				*g:flood_callbacks*
		Hook points. User can inject various functions to frontier.

		*before_init* :	Inject to flood#init() before called
		*after_init* :	Inject to flood#init() after called
		*before_run* :	Inject to flood#{check,check_contents}#run()
				before called
		*after_run* :	Inject to flood#{check,check_contents}#run()
				after called

g:flood_detct_flow_statement			*g:flood_detct_flow_statement*
		Execute check or check_contents if @flow statement exists.
		If not exists, check or check_contents not execute.

		Default value is 1(Enabled).

==============================================================================
CHANGELOG						*flood-changelog*
2017-02-25
- Fix to jump another file.
  Definition jump did not work correctly.

2017-01-29
- Add g:flood_detct_flow_statement for check, check_contents

2017-01-01
- Add callback feature

2016-11-29
- Change save on exec behavior

2016-11-27
- Do not close QuickFix if other QuickFixList exists

2016-11-26
- Open QuickFix only flow project

2016-11-19
- Fix QuickFix column positon
- Fix completeopt bug

2016-11-15
- Support type-at-pos

2016-11-13
- Async complete supported

2016-11-05
- First release

vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:
